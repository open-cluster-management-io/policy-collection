apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-opa-sample
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-opa-configmap
        spec:
          remediationAction: enforce
          severity: high
          namespaceSelector:
            exclude: ["kube-*"]
            include: ["default"]
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                data:
                  no_pod.rego: |-
                    package kubernetes.admission
                    deny[msg] {
                        input.request.kind.kind == "Pod"
                        input.request.namespace == "opa"
                        image := input.request.object.spec.containers[_].image
                        not startswith(image, "hooli.com")
                        msg := sprintf("image fails to come from trusted registry: %v", [image])
                    }
                kind: ConfigMap
                metadata:
                  name: nopod
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-opa
placementRef:
  name: placement-policy-opa
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-opa-sample
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-opa
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: environment, operator: In, values: ["dev"]}
