apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: placement-openshift-plus-clusters
  namespace: policies
spec:
  predicates:
  - requiredClusterSelector:
      labelSelector:
        matchExpressions:
        - key: vendor
          operator: In
          values:
          - OpenShift
        - key: name
          operator: NotIn
          values:
          - local-cluster
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: placement-openshift-plus-hub
  namespace: policies
spec:
  predicates:
  - requiredClusterSelector:
      labelSelector:
        matchExpressions:
        - key: name
          operator: In
          values:
          - local-cluster
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: binding-policy-openshift-plus-hub
  namespace: policies
placementRef:
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
  name: placement-openshift-plus-clusters
subjects:
- apiGroup: policy.open-cluster-management.io
  kind: PolicySet
  name: openshift-plus-clusters
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: binding-policy-openshift-plus-hub2
  namespace: policies
placementRef:
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
  name: placement-openshift-plus-hub
subjects:
- apiGroup: policy.open-cluster-management.io
  kind: PolicySet
  name: openshift-plus-hub
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-acs-central-ca-bundle
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: stackrox
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
              name: create-cluster-init
              namespace: stackrox
        - complianceType: musthave
          objectDefinition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: Role
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                argocd.argoproj.io/sync-wave: "1"
              name: create-cluster-init
              namespace: stackrox
            rules:
            - apiGroups:
              - ""
              resources:
              - secrets
              verbs:
              - get
              - list
              - create
              - patch
              - update
            - apiGroups:
              - platform.stackrox.io
              resources:
              - securedclusters
              verbs:
              - get
              - list
              - patch
              - update
            - apiGroups:
              - route.openshift.io
              resources:
              - routes
              verbs:
              - get
              - list
        - complianceType: musthave
          objectDefinition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
              name: create-cluster-init
              namespace: stackrox
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: Role
              name: create-cluster-init
            subjects:
            - kind: ServiceAccount
              name: create-cluster-init
              namespace: stackrox
        - complianceType: musthave
          objectDefinition:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                argocd.argoproj.io/sync-wave: "2"
              name: create-cluster-init-bundle
              namespace: stackrox
            spec:
              template:
                metadata:
                  annotations:
                    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                spec:
                  containers:
                  - command:
                    - /bin/bash
                    - -c
                    - |
                      #!/usr/bin/env bash
                      if kubectl get secret/sensor-tls &> /dev/null; then
                        echo "cluster-init bundle has already been configured, doing nothing"
                        exit 0
                      else

                        # Wait for central to be ready
                        attempt_counter=0
                        max_attempts=20
                        echo "Waiting for central to be available..."
                        until $(curl -k --output /dev/null --silent --head --fail https://central); do
                            if [ ${attempt_counter} -eq ${max_attempts} ];then
                              echo "Max attempts reached"
                              exit 1
                            fi

                            printf '.'
                            attempt_counter=$(($attempt_counter+1))
                            echo "Made attempt $attempt_counter, waiting..."
                            sleep 5
                        done

                        echo "Configuring cluster-init bundle"
                        export DATA={\"name\":\"local-cluster\"}
                        curl -k -o /tmp/bundle.json -X POST -u "admin:$PASSWORD" -H "Content-Type: application/json" --data $DATA https://central/v1/cluster-init/init-bundles

                        echo "Bundle received"

                        if [[ "$OSTYPE" == "linux-gnu"* ]]; then
                            BASE='base64 -w 0'
                        elif [[ "$OSTYPE" == "darwin"* ]]; then
                            BASE='base64'
                        fi

                        echo "Applying bundle"
                        # No jq in container, python to the rescue
                        cat /tmp/bundle.json | python3 -c "import sys, json; print(json.load(sys.stdin)['kubectlBundle'])" | ${BASE} -d | oc apply -f -
                        ACS_HOST="$(oc get route central -o custom-columns=HOST:.spec.host --no-headers):443"
                        oc patch secret sensor-tls --type='json' -p="[{\"op\" : \"add\", \"path\" : \"/data/acs-host\", \"value\" : \"$(echo $ACS_HOST | ${BASE})\"}]"

                        echo "ACS Cluster init bundle generated and applied"
                      fi
                    env:
                    - name: PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: password
                          name: central-htpasswd
                    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
                    imagePullPolicy: Always
                    name: create-cluster-init-bundle
                  dnsPolicy: ClusterFirst
                  restartPolicy: Never
                  serviceAccount: create-cluster-init
                  serviceAccountName: create-cluster-init
                  terminationGracePeriodSeconds: 30
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-acs-central-status
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-status
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: central
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: scanner-db
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: scanner
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        remediationAction: inform
        severity: medium
  remediationAction: inform
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SC System and Communications Protection
    policy.open-cluster-management.io/controls: SC-1 Policy and Procedures
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-acs-operator-central
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-operator-central
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: stackrox
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: rhacs-operator
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: rhacs-operator-group
              namespace: rhacs-operator
            spec: {}
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: rhacs-operator
              namespace: rhacs-operator
            spec:
              channel: latest
              installPlanApproval: Automatic
              name: rhacs-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
        - complianceType: musthave
          objectDefinition:
            apiVersion: platform.stackrox.io/v1alpha1
            kind: Central
            metadata:
              name: stackrox-central-services
              namespace: stackrox
            spec:
              central:
                exposure:
                  loadBalancer:
                    enabled: false
                    port: 443
                  nodePort:
                    enabled: false
                  route:
                    enabled: true
                persistence:
                  persistentVolumeClaim:
                    claimName: stackrox-db
              egress:
                connectivityPolicy: Online
              scanner:
                analyzer:
                  scaling:
                    autoScaling: Enabled
                    maxReplicas: 5
                    minReplicas: 2
                    replicas: 2
                scannerComponent: Enabled
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-acs-sync-resources
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: platform.stackrox.io/v1alpha1
            kind: SecuredCluster
            metadata:
              name: stackrox-secured-cluster-services
              namespace: stackrox
            spec:
              admissionControl:
                listenOnCreates: false
                listenOnEvents: true
                listenOnUpdates: false
              auditLogs:
                collection: Auto
              centralEndpoint: |
                {{ fromSecret "stackrox" "sensor-tls" "acs-host" | base64dec }}
              clusterName: |
                {{ fromSecret "open-cluster-management-agent" "hub-kubeconfig-secret" "cluster-name" | base64dec }}
              perNode:
                collector:
                  collection: KernelModule
                  imageFlavor: Regular
                taintToleration: TolerateTaints
              scanner:
                scannerComponent: Disabled
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              admission-control-cert.pem: '{{ fromSecret "stackrox" "admission-control-tls"
                "admission-control-cert.pem" }}'
              admission-control-key.pem: '{{ fromSecret "stackrox" "admission-control-tls"
                "admission-control-key.pem" }}'
              ca.pem: '{{ fromSecret "stackrox" "admission-control-tls" "ca.pem" }}'
            kind: Secret
            metadata:
              name: admission-control-tls
              namespace: policies
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              ca.pem: '{{ fromSecret "stackrox" "collector-tls" "ca.pem" }}'
              collector-cert.pem: '{{ fromSecret "stackrox" "collector-tls" "collector-cert.pem"
                }}'
              collector-key.pem: '{{ fromSecret "stackrox" "collector-tls" "collector-key.pem"
                }}'
            kind: Secret
            metadata:
              name: collector-tls
              namespace: policies
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources4
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              acs-host: '{{ fromSecret "stackrox" "sensor-tls" "acs-host" }}'
              ca.pem: '{{ fromSecret "stackrox" "sensor-tls" "ca.pem" }}'
              sensor-cert.pem: '{{ fromSecret "stackrox" "sensor-tls" "sensor-cert.pem"
                }}'
              sensor-key.pem: '{{ fromSecret "stackrox" "sensor-tls" "sensor-key.pem"
                }}'
            kind: Secret
            metadata:
              name: sensor-tls
              namespace: policies
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources5
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: console.openshift.io/v1
            kind: ConsoleLink
            metadata:
              name: acs
            spec:
              applicationMenu:
                imageURL: https://upload.wikimedia.org/wikipedia/commons/3/3a/OpenShift-LogoType.svg
                section: Red Hat applications
              href: https://{{ (lookup "route.openshift.io/v1" "Route" "stackrox"
                "central").spec.host }}
              location: ApplicationMenu
              text: Red Hat Advanced Cluster Security for Kubernetes
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-advanced-managed-cluster-security
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: stackrox
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: rhacs-operator
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: rhacs-operator-group
              namespace: rhacs-operator
            spec: {}
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security4
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: rhacs-operator
              namespace: rhacs-operator
            spec:
              channel: latest
              installPlanApproval: Automatic
              name: rhacs-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security5
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              admission-control-cert.pem: '{{hub fromSecret "policies" "admission-control-tls"
                "admission-control-cert.pem" hub}}'
              admission-control-key.pem: '{{hub fromSecret "policies" "admission-control-tls"
                "admission-control-key.pem" hub}}'
              ca.pem: '{{hub fromSecret "policies" "admission-control-tls" "ca.pem"
                hub}}'
            kind: Secret
            metadata:
              name: admission-control-tls
              namespace: stackrox
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security6
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              ca.pem: '{{hub fromSecret "policies" "collector-tls" "ca.pem" hub}}'
              collector-cert.pem: '{{hub fromSecret "policies" "collector-tls" "collector-cert.pem"
                hub}}'
              collector-key.pem: '{{hub fromSecret "policies" "collector-tls" "collector-key.pem"
                hub}}'
            kind: Secret
            metadata:
              name: collector-tls
              namespace: stackrox
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security7
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              acs-host: '{{hub fromSecret "policies" "sensor-tls" "acs-host" hub}}'
              ca.pem: '{{hub fromSecret "policies" "sensor-tls" "ca.pem" hub}}'
              sensor-cert.pem: '{{hub fromSecret "policies" "sensor-tls" "sensor-cert.pem"
                hub}}'
              sensor-key.pem: '{{hub fromSecret "policies" "sensor-tls" "sensor-key.pem"
                hub}}'
            kind: Secret
            metadata:
              name: sensor-tls
              namespace: stackrox
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security8
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: platform.stackrox.io/v1alpha1
            kind: SecuredCluster
            metadata:
              name: stackrox-secured-cluster-services
              namespace: stackrox
            spec:
              admissionControl:
                listenOnCreates: false
                listenOnEvents: true
                listenOnUpdates: false
              auditLogs:
                collection: Auto
              centralEndpoint: |
                {{ fromSecret "stackrox" "sensor-tls" "acs-host" | base64dec }}
              clusterName: |
                {{ fromSecret "open-cluster-management-agent" "hub-kubeconfig-secret" "cluster-name" | base64dec }}
              perNode:
                collector:
                  collection: KernelModule
                  imageFlavor: Regular
                taintToleration: TolerateTaints
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-advanced-managed-cluster-status
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-status
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: sensor
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              name: collector
              namespace: stackrox
            status:
              numberMisscheduled: 0
        remediationAction: inform
        severity: medium
  remediationAction: inform
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments,CA-7 Continuous
      Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-compliance-operator-install
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-compliance-operator-install
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: openshift-compliance
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: compliance-operator
              namespace: openshift-compliance
            spec:
              targetNamespaces:
              - openshift-compliance
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: compliance-operator
              namespace: openshift-compliance
            spec:
              installPlanApproval: Automatic
              name: compliance-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: ClusterServiceVersion
            metadata:
              namespace: openshift-compliance
            spec:
              displayName: Compliance Operator
            status:
              phase: Succeeded
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-7 Software Firmware and Information
      Integrity
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-config-quay
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-config-quay
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              host: '{{ (lookup "route.openshift.io/v1" "Route" "local-quay" "registry-quay"
                ).spec.host }}'
            kind: ConfigMap
            metadata:
              name: quay-config
              namespace: policies
        - complianceType: musthave
          objectDefinition:
            apiVersion: console.openshift.io/v1
            kind: ConsoleLink
            metadata:
              name: quay
            spec:
              applicationMenu:
                imageURL: https://upload.wikimedia.org/wikipedia/commons/3/3a/OpenShift-LogoType.svg
                section: Red Hat applications
              href: https://{{ (lookup "route.openshift.io/v1" "Route" "local-quay"
                "registry-quay" ).spec.host }}
              location: ApplicationMenu
              text: Red Hat Quay Enterprise Registry
        - complianceType: musthave
          objectDefinition:
            apiVersion: batch/v1
            kind: Job
            metadata:
              name: create-admin-user
              namespace: local-quay
            spec:
              template:
                spec:
                  containers:
                  - command:
                    - /bin/bash
                    - -c
                    - |
                      #!/usr/bin/env bash

                      # Wait for quay to be ready
                      attempt_counter=0
                      max_attempts=80
                      echo "Waiting for quay to be available..."
                      until $(curl --output /dev/null --silent --head --fail http://registry-quay-app); do
                          if [ ${attempt_counter} -eq ${max_attempts} ];then
                            echo "Max attempts reached"
                            exit 1
                          fi

                          printf '.'
                          attempt_counter=$(($attempt_counter+1))
                          echo "Made attempt $attempt_counter, waiting..."
                          sleep 30
                      done

                      QUAYHOST=$(oc get route -n local-quay registry-quay -o jsonpath='{.spec.host}')
                      if [ $? -ne 0 ]; then
                        echo "Quay route does not exist yet, please wait and try again."
                        exit 1
                      fi
                      RESULT=$(oc get secret -n local-quay quayadmin)
                      if [ $? -eq 0 ]; then
                        echo "Quay user configuration secret already exists: quayadmin in namespace local-quay"
                        exit 1
                      fi

                      ADMINPASS=`head -c 8 /dev/urandom | base64 | sed 's/=//'`

                      RESULT=$(curl -X POST -k -s https://$QUAYHOST/api/v1/user/initialize --header 'Content-Type: application/json' --data "{ \"username\": \"quayadmin\", \"password\":\"${ADMINPASS}\", \"email\": \"quayadmin@example.com\", \"access_token\": true}")
                      echo "$RESULT" | grep -q "non-empty database"
                      if [ $? -eq 0 ]; then
                        echo "Quay user configuration failed, the database has been initialized."
                        exit 1
                      else
                        cat <<EOF | kubectl create -f -
                      apiVersion: v1
                      kind: Secret
                      metadata:
                        name: quayadmin
                        namespace: local-quay
                      type: Opaque
                      data:
                        password: $(echo ${ADMINPASS} | base64)
                      EOF
                        echo "Quay password successfully set for user quayadmin and stored in secret local-quay/quayadmin."
                        TOKEN=$(echo "$RESULT" | tr ',' '\n' | grep access_token | awk -F: '{print $2}' | sed 's/"//g')
                        cat <<EOF | kubectl create -f -
                      apiVersion: v1
                      kind: Secret
                      metadata:
                        name: quay-api-token
                      type: Opaque
                      data:
                        token: $(echo ${TOKEN} | base64)
                      EOF
                        echo "Quay token successfully obtained and stored in secret quay-api-token."
                      fi
                    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
                    imagePullPolicy: Always
                    name: create-admin-user
                  dnsPolicy: ClusterFirst
                  restartPolicy: Never
                  serviceAccount: create-admin-user
                  serviceAccountName: create-admin-user
                  terminationGracePeriodSeconds: 30
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-7 Software Firmware and Information
      Integrity
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-install-quay
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-install-quay
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              labels:
                openshift.io/cluster-monitoring: "true"
              name: local-quay
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: create-admin-user
              namespace: local-quay
        - complianceType: musthave
          objectDefinition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: Role
            metadata:
              name: create-admin-user
              namespace: local-quay
            rules:
            - apiGroups:
              - ""
              resources:
              - secrets
              verbs:
              - get
              - list
              - create
              - patch
              - update
            - apiGroups:
              - route.openshift.io
              resources:
              - routes
              verbs:
              - get
              - list
        - complianceType: musthave
          objectDefinition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              name: create-admin-user
              namespace: local-quay
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: Role
              name: create-admin-user
            subjects:
            - kind: ServiceAccount
              name: create-admin-user
              namespace: local-quay
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: local-quay
              namespace: local-quay
            spec:
              targetNamespaces:
              - local-quay
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/quay-operator.local-quay: ""
              name: quay-operator
              namespace: local-quay
            spec:
              channel: stable-3.7
              installPlanApproval: Automatic
              name: quay-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              config.yaml: RkVBVFVSRV9VU0VSX0lOSVRJQUxJWkU6IHRydWUKQlJPV1NFUl9BUElfQ0FMTFNfWEhSX09OTFk6IGZhbHNlClNVUEVSX1VTRVJTOgotIHF1YXlhZG1pbgpGRUFUVVJFX1VTRVJfQ1JFQVRJT046IGZhbHNlCg==
            kind: Secret
            metadata:
              name: init-config-bundle-secret
              namespace: local-quay
            type: Opaque
        - complianceType: musthave
          objectDefinition:
            apiVersion: quay.redhat.com/v1
            kind: QuayRegistry
            metadata:
              name: registry
              namespace: local-quay
            spec:
              components:
              - kind: objectstorage
                managed: true
              - kind: tls
                managed: true
              configBundleSecret: init-config-bundle-secret
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: CA Assessment Authorization and
      Monitoring
    policy.open-cluster-management.io/controls: CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-ocm-observability
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-ocm-observability
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: console.openshift.io/v1
            kind: ConsoleLink
            metadata:
              name: observability
            spec:
              applicationMenu:
                imageURL: https://upload.wikimedia.org/wikipedia/commons/3/3a/OpenShift-LogoType.svg
                section: Red Hat applications
              href: https://{{ (lookup "route.openshift.io/v1" "Route" "open-cluster-management-observability"
                "grafana").spec.host }}
              location: ApplicationMenu
              text: Red Hat Advanced Cluster Management Observability
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-ocm-observability2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: thanos-object-storage
              namespace: open-cluster-management-observability
            stringData:
              thanos.yaml: |
                type: s3
                config:
                  bucket: {{ (lookup "objectbucket.io/v1alpha1" "ObjectBucket" "" "obc-openshift-storage-obc-observability").spec.endpoint.bucketName }}
                  endpoint: {{ (lookup "objectbucket.io/v1alpha1" "ObjectBucket" "" "obc-openshift-storage-obc-observability").spec.endpoint.bucketHost }}
                  insecure: true
                  access_key: {{ fromSecret "openshift-storage" "noobaa-admin" "AWS_ACCESS_KEY_ID" | base64dec }}
                  secret_key: {{ fromSecret "openshift-storage" "noobaa-admin" "AWS_SECRET_ACCESS_KEY" | base64dec }}
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-ocm-observability3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: observability.open-cluster-management.io/v1beta2
            kind: MultiClusterObservability
            metadata:
              name: observability
            spec:
              observabilityAddonSpec: {}
              storageConfig:
                metricObjectStorage:
                  key: thanos.yaml
                  name: thanos-object-storage
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-ocm-observability4
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              .dockerconfigjson: '{{- if eq (lookup "v1" "Secret" "open-cluster-management"
                "multiclusterhub-operator-pull-secret").kind "Secret" -}} {{- fromSecret
                "open-cluster-management" "multiclusterhub-operator-pull-secret" ".dockerconfigjson"
                -}} {{- else -}} {{- fromSecret "openshift-config" "pull-secret" ".dockerconfigjson"
                -}} {{- end -}}'
            kind: Secret
            metadata:
              name: multiclusterhub-operator-pull-secret
              namespace: open-cluster-management-observability
            type: kubernetes.io/dockerconfigjson
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-7 Software Firmware and Information
      Integrity
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-odf
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-odf
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: openshift-storage
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha2
            kind: OperatorGroup
            metadata:
              name: openshift-storage-operatorgroup
              namespace: openshift-storage
            spec:
              targetNamespaces:
              - openshift-storage
        - complianceType: musthave
          objectDefinition:
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: odf-operator
              namespace: openshift-storage
            spec:
              installPlanApproval: Automatic
              name: odf-operator
              source: redhat-operators
              sourceNamespace: openshift-marketplace
        - complianceType: musthave
          objectDefinition:
            apiVersion: odf.openshift.io/v1alpha1
            kind: StorageSystem
            metadata:
              name: ocs-storagecluster-storagesystem
              namespace: openshift-storage
            spec:
              kind: storagecluster.ocs.openshift.io/v1
              name: ocs-storagecluster
              namespace: openshift-storage
        - complianceType: musthave
          objectDefinition:
            apiVersion: ocs.openshift.io/v1
            kind: StorageCluster
            metadata:
              annotations:
                uninstall.ocs.openshift.io/cleanup-policy: delete
                uninstall.ocs.openshift.io/mode: graceful
              name: ocs-storagecluster
              namespace: openshift-storage
            spec:
              arbiter: {}
              encryption:
                kms: {}
              externalStorage: {}
              managedResources:
                cephBlockPools: {}
                cephCluster: {}
                cephConfig: {}
                cephDashboard: {}
                cephFilesystems: {}
                cephObjectStoreUsers: {}
                cephObjectStores: {}
                cephToolbox: {}
              mirroring: {}
              nodeTopologies: {}
              storageDeviceSets:
              - config: {}
                count: 1
                dataPVCTemplate:
                  metadata: {}
                  spec:
                    accessModes:
                    - ReadWriteOnce
                    resources:
                      requests:
                        storage: 2Ti
                    storageClassName: gp2
                    volumeMode: Block
                  status: {}
                name: ocs-deviceset-gp2
                placement: {}
                portable: true
                preparePlacement: {}
                replica: 3
                resources: {}
        - complianceType: musthave
          objectDefinition:
            apiVersion: objectbucket.io/v1alpha1
            kind: ObjectBucketClaim
            metadata:
              name: obc-observability
              namespace: openshift-storage
            spec:
              generateBucketName: obc-observability-bucket
              storageClassName: openshift-storage.noobaa.io
        - complianceType: musthave
          objectDefinition:
            apiVersion: operator.openshift.io/v1
            kind: Console
            metadata:
              name: cluster
            spec:
              plugins:
              - odf-console
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-7 Software Firmware and Information
      Integrity
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-odf-status
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-odf-status
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: noobaa-operator
              namespace: openshift-storage
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: ocs-operator
              namespace: openshift-storage
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: odf-operator-controller-manager
              namespace: openshift-storage
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: ocs.openshift.io/v1
            kind: StorageCluster
            metadata:
              name: ocs-storagecluster
              namespace: openshift-storage
            status:
              phase: Ready
        - complianceType: musthave
          objectDefinition:
            apiVersion: noobaa.io/v1alpha1
            kind: NooBaa
            metadata:
              name: noobaa
              namespace: openshift-storage
            status:
              phase: Ready
        - complianceType: musthave
          objectDefinition:
            apiVersion: noobaa.io/v1alpha1
            kind: BackingStore
            metadata:
              name: noobaa-default-backing-store
              namespace: openshift-storage
            status:
              phase: Ready
        - complianceType: musthave
          objectDefinition:
            apiVersion: noobaa.io/v1alpha1
            kind: BucketClass
            metadata:
              name: noobaa-default-bucket-class
              namespace: openshift-storage
            status:
              phase: Ready
        - complianceType: musthave
          objectDefinition:
            apiVersion: objectbucket.io/v1alpha1
            kind: ObjectBucketClaim
            metadata:
              name: obc-observability
              namespace: openshift-storage
            status:
              phase: Bound
        remediationAction: inform
        severity: medium
  remediationAction: inform
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-7 Software Firmware and Information
      Integrity
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-quay-status
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-quay-status
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: registry-quay-app
              namespace: local-quay
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: registry-quay-database
              namespace: local-quay
            status:
              conditions:
              - status: "True"
                type: Available
        remediationAction: inform
        severity: medium
  remediationAction: inform
---
apiVersion: policy.open-cluster-management.io/v1beta1
kind: PolicySet
metadata:
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: openshift-plus-clusters
  namespace: policies
spec:
  description: The OpenShift Platform Plus policy set applies several policies that
    install the OpenShift Platform Plus products using best practices that allow them
    to work well together. This policy set is focused on the components that install
    to every managed cluster.
  policies:
  - policy-advanced-managed-cluster-security
  - policy-advanced-managed-cluster-status
  - policy-compliance-operator-install
---
apiVersion: policy.open-cluster-management.io/v1beta1
kind: PolicySet
metadata:
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: openshift-plus-hub
  namespace: policies
spec:
  description: The OpenShift Platform Plus policy set applies several policies that
    will install the OpenShift Platform Plus products using best practices that allow
    them to work well together. This policy set is focused on the components that
    install to the Advanced Cluster Management hub.
  policies:
  - policy-acs-central-ca-bundle
  - policy-acs-central-status
  - policy-acs-operator-central
  - policy-acs-sync-resources
  - policy-advanced-managed-cluster-status
  - policy-compliance-operator-install
  - policy-config-quay
  - policy-install-quay
  - policy-ocm-observability
  - policy-odf
  - policy-odf-status
  - policy-quay-status
