apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-hub-pvc-backup-source
  namespace: open-cluster-management-backup
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: acm-hub-pvc-backup-config
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: create-replication-source
        spec:
          object-templates-raw: |
            {{- /* Specify the parameters  */ -}}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $ns := "open-cluster-management-backup" }}   
            {{- $volsync_secret := "acm-hub-pvc-backup-restic-secret" }} 
            {{- $volsync_map := "hub-pvc-backup" }} 
            {{- $volsync_label := "cluster.open-cluster-management.io/backup-hub-pvc" }}
            {{- $pv_claim_cond := gt (len ( lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items ) 0 }}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}
            {{- $volsync_pvcs := "hub-pvc-backup-pvcs" }}

            {{- /* PVC labels  */ -}}
            {{- $last_backup_schedule_label := "cluster.open-cluster-management.io/backup-last-schedule" }}
            {{- $last_sync_name_label := "cluster.open-cluster-management.io/backup-last-sync-name" }}
            {{- $last_sync_time_label := "cluster.open-cluster-management.io/backup-last-sync-time" }}
            {{- $last_sync_status_label := "cluster.open-cluster-management.io/backup-last-sync-status" }}

            {{- /* Create the volsync ReplicationSource and secret - if BackupSchedule exists ; delete ReplicationSource otherwise */ -}}
            {{ if $volsync_backup_cond }}

              {{- /* The backup-schedule-hook label will be updated with the latest credentials backup execution timestamp */ -}}
              {{- /* The backup-schedule-hook can be used by the PVC owner to know when to require a new snapshot - ask for one whenever the oadp backup is running */ -}}
              {{- $last_backup_schedule_value := "" }}
              {{- $credentials_name := "acm-credentials-schedule" }}
              {{- $credentials_schedule := lookup $velero_api $kind_schedule $ns $credentials_name }}
              {{ if and (eq $credentials_schedule.metadata.name $credentials_name) (eq $credentials_schedule.status.phase "Enabled") }}
                {{- /* If credentials schedule exists and is enabled, take the timestamp from the latest backup */ -}}
                {{- /* The backup is created on the schedule creation, even if the job schedule is not triggered; so use the schedule creation timestamp initially */ -}}
                {{- $last_backup_schedule_value = $credentials_schedule.metadata.creationTimestamp }}
                {{ if not (eq "" $credentials_schedule.status.lastBackup )}}
                  {{- $last_backup_schedule_value = $credentials_schedule.status.lastBackup }}
                {{- end }}
              {{- end }}

              {{- range $rs := (lookup "volsync.backube/v1alpha1" "ReplicationSource" "" "" $volsync_label).items }}
                {{- $pvc_rs := (lookup "v1" "PersistentVolumeClaim" $rs.metadata.namespace "" $volsync_label).items }}
                {{- /* If the PVC in the ReplicationSource ns no longer exists or doesn't have the volsync label, delete the ReplicationSource */ -}}
                {{ if eq (len $pvc_rs ) 0 }}  
                  - complianceType: mustnothave
                    objectDefinition:
                      kind: ReplicationSource
                      apiVersion: volsync.backube/v1alpha1
                      metadata:
                        name: {{ $rs.metadata.name }}
                        namespace: {{ $rs.metadata.namespace }}
                        labels:
                          {{ $volsync_label }}: acm
                  - complianceType: mustnothave
                    objectDefinition:
                      kind: ConfigMap
                      apiVersion: v1
                      metadata:
                        name: {{( (cat $volsync_map "-" $rs.metadata.name ) | replace " " "") }}
                        namespace: {{ $rs.metadata.namespace }} 
                {{- end }}
              {{- end }}

              {{- $volsync_pvcs_str := "" }}
              {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}

                {{- if eq $pvc.status.phase "Bound" }}
                  {{- /* Use the hub-pvc-backup-pvcns-pvcname config instead of the default acm-hub-pvc-backup-config map, if such map exists under the $ns */ -}}
                  {{- $pvc_config_name := ( (cat $volsync_map "-" $pvc.metadata.namespace "-" $pvc.metadata.name ) | replace " " "" ) }}

                  {{- $pvc_config_info_name := ( (cat $volsync_map "-" $pvc.metadata.name ) | replace " " "" ) }}

                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: ConfigMap
                      metadata:
                        name: {{ $pvc_config_info_name }}
                        namespace: {{ $pvc.metadata.namespace }}
                        labels:
                          cluster.open-cluster-management.io/backup: cluster-activation
                          cluster.open-cluster-management.io/backup-pvc: {{ $pvc.metadata.name }}
                      data:
                        {{- if not ( eq  $pvc.spec.storageClassName "") }}
                        storageClassName: {{ $pvc.spec.storageClassName }}
                        {{- end }}
                        {{- if not ( eq  $pvc.spec.volumeMode "") }}
                        volumeMode: {{ $pvc.spec.volumeMode }}
                        {{- end }}
                        {{- if not ( eq  $pvc.spec.resources.requests.storage "") }}
                        resources.requests.storage: {{ $pvc.spec.resources.requests.storage }}
                        {{- end }}                        
                        {{- if not (empty $pvc.spec.accessModes ) }}
                          {{ $am_val := ""}}
                          {{- range $av := $pvc.spec.accessModes }}
                             {{ $am_val =  cat $am_val $av }}
                          {{- end }}
                        resources.accessModes: {{ $am_val }}
                        {{- end }}                        

                  {{ if eq ( lookup "v1" "ConfigMap" $ns $pvc_config_name ).metadata.name  $pvc_config_name }}   
                    {{ $volsync_map = $pvc_config_name }}
                  {{- end }}   

                  {{- $volsync_pvcs_str = ( (cat $volsync_pvcs_str "##" $pvc.metadata.namespace "#" $pvc.metadata.name ) | replace " " "" ) }}
                  {{- $common_restic_repo := ( lookup "v1" "Secret" $ns $volsync_secret ).data.RESTIC_REPOSITORY | base64dec }}
                  {{- $secretName := ( (cat $pvc.metadata.name "-"  (fromConfigMap $ns $volsync_map "repository") ) | replace " " "" ) }}                 
                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: Secret
                      metadata:
                        name: '{{ $secretName }}'
                        namespace: {{ $pvc.metadata.namespace }}
                      data:
                {{- range $key, $value := ( lookup "v1" "Secret" $ns $volsync_secret ).data }}
                    {{- if not (eq $key "RESTIC_REPOSITORY")}}
                        {{ $key }}: {{ $value }}
                    {{- end }}    
                {{- end }}
                        RESTIC_REPOSITORY: {{ ( ( (cat $common_restic_repo "/" $pvc.metadata.namespace "-" $pvc.metadata.name ) | replace " " "" ) | base64enc ) }}                      
                      type: Opaque

                  {{- /* Look for the PVC label used to run a manual snapshot when waiting for the PVC to prepare for backup - ie db freeze */ -}}
                  {{- /* Don't create the ReplicationSource if the label is not set yet, this is the initial step */ -}}
                  {{- $wait_for_hooks_pvc_label := "cluster.open-cluster-management.io/backup-pvc-hook" }}
                  {{- $wait_for_hooks_pvc_value := "undefined" }}
                  {{- range $pvc_with_hooks := (lookup "v1" "PersistentVolumeClaim" $pvc.metadata.namespace "" $wait_for_hooks_pvc_label).items }}
                    {{ if eq $pvc_with_hooks.metadata.name  $pvc.metadata.name}}
                      {{- $wait_for_hooks_pvc_value = (index $pvc.metadata.labels $wait_for_hooks_pvc_label) }}
                  - complianceType: musthave
                    objectDefinition:
                      kind: PersistentVolumeClaim
                      apiVersion: v1
                      metadata:
                        name: {{ $pvc.metadata.name }}
                        namespace: {{ $pvc.metadata.namespace }}
                        labels:
                          {{- /* Get the ReplicationSource status and add it to the PVC; used by the PVC owner to decide when to run a unlock of data */ -}}
                          {{- $replicationSource :=  lookup "volsync.backube/v1alpha1" "ReplicationSource" $pvc.metadata.namespace $pvc.metadata.name }}
                          {{ if eq $replicationSource.metadata.name $pvc.metadata.name}}
                          {{- /* If the ReplicationSource with the PVC name was found in the PVC ns, set the labels on PVC */ -}}
                          {{ $last_sync_name_label }}: {{ $replicationSource.status.lastManualSync }}
                          {{ $last_sync_time_label }}: {{ $replicationSource.status.lastSyncTime | replace ":" "." }}
                          {{ $last_sync_status_label }}: {{ $replicationSource.status.latestMoverStatus.result }}
                          {{- end }}
                          {{ $last_backup_schedule_label }}: {{ $last_backup_schedule_value | replace ":" "." }}            
                    {{- end }}
                  {{- end }} 
                  {{ if not ( eq $wait_for_hooks_pvc_value "" ) }}
                  - complianceType: musthave
                    objectDefinition:
                      kind: ReplicationSource
                      apiVersion: volsync.backube/v1alpha1
                      metadata:
                        name: {{ $pvc.metadata.name }}
                        namespace: {{ $pvc.metadata.namespace }}
                        labels:
                          {{ $volsync_label }}: acm
                      spec:
                        restic:
                          cacheCapacity: '{{ fromConfigMap $ns $volsync_map "cacheCapacity" }}'
                          copyMethod: '{{ fromConfigMap $ns $volsync_map "copyMethod" }}'
                          pruneIntervalDays: '{{ fromConfigMap $ns $volsync_map "pruneIntervalDays" | toInt }}'
                          repository: '{{ $secretName }}'
                          retain:
                            daily: '{{ fromConfigMap $ns $volsync_map "retain_daily" | toInt }}'
                            hourly: '{{ fromConfigMap $ns $volsync_map "retain_hourly" | toInt }}'
                            monthly: '{{ fromConfigMap $ns $volsync_map "retain_monthly" | toInt }}'
                        sourcePVC: {{ $pvc.metadata.name }}
                        trigger:
                          {{ if eq $wait_for_hooks_pvc_value "undefined" }} 
                          {{- /* if the cluster.open-cluster-management.io/backup-pvc-hook hook label was not set, run this using a schedule */ -}} 
                          schedule: '{{ fromConfigMap $ns $volsync_map "trigger_schedule" }}'  
                          {{- else }}
                          {{- /* if the cluster.open-cluster-management.io/backup-pvc-hook hook label was set, run manual */ -}}                                       
                          manual: '{{ index $pvc.metadata.labels $wait_for_hooks_pvc_label }}' 
                          {{- end }}   
                  {{- end }}
                {{- end }}        
              {{- end }}
                 {{ if not (eq $volsync_pvcs_str "") }}
                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: ConfigMap
                      metadata:
                        name: {{ $volsync_pvcs }}
                        namespace: {{ $ns }}
                        labels:
                          cluster.open-cluster-management.io/backup: cluster-activation
                          app: {{ $volsync_pvcs }}
                      data:
                        pvcs: {{ trimAll "##" $volsync_pvcs_str }}
                  {{- end }}      
            {{- else }}
              {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}  
                  - complianceType: mustnothave
                    objectDefinition:
                      kind: ReplicationSource
                      apiVersion: volsync.backube/v1alpha1
                      metadata:
                        name: {{ $pvc.metadata.name }}
                        namespace: {{ $pvc.metadata.namespace }}
                        labels:
                          {{ $volsync_label }}: acm
                      spec:
                        sourcePVC: {{ $pvc.metadata.name }}
              {{- end }}
            {{- end }}
          remediationAction: enforce
          severity: high 
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-source-replication-success 
        spec:
          object-templates-raw: |
            {{- $volsync_label := "cluster.open-cluster-management.io/backup-hub-pvc" }}
            {{- $ns := "open-cluster-management-backup" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}

            {{- /* The volsync replication-source should be successful */ -}}
            {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}
              {{ if $volsync_backup_cond }}
              - complianceType: musthave
                objectDefinition:
                  apiVersion: volsync.backube/v1alpha1
                  kind: ReplicationSource
                  metadata:
                    namespace: {{ $pvc.metadata.namespace }}
                  status:
                    latestMoverStatus:
                      result: Successful       
              {{- end }}  
            {{- end }}
          remediationAction: inform
          severity: high
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-source-replication-errors 
        spec:
          object-templates-raw: |
            {{- $volsync_label := "cluster.open-cluster-management.io/backup-hub-pvc" }}
            {{- $ns := "open-cluster-management-backup" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}

            {{- /* The volsync replication-source should not be failed */ -}}
            {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}
              {{ if $volsync_backup_cond }}      
              - complianceType: mustnothave
                objectDefinition:
                  apiVersion: volsync.backube/v1alpha1
                  kind: ReplicationSource
                  metadata:
                    namespace: {{ $pvc.metadata.namespace }}
                  status:
                    latestMoverStatus:
                      result: Failed
              {{- end }}  
            {{- end }}
          remediationAction: inform
          severity: high